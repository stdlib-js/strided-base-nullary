// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r,t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;function c(e,r,t){e[r]=t}function f(e,r,t){e.set(t,r)}function _(e,r,t,n){var o,a;return(a=e[0]).get&&a.set&&(o=f),o?function(e,r,t,n,o){var a,i,u,l,c,f;if(!((c=r[0])<=0))for(u=(i=t[0])<0?(1-c)*i:0,l=e[0],a=n[0],f=0;f<c;f++)a(l,u,o()),u+=i}(e,r,t,[o=o||c],n):function(e,r,t,n){var o,a,i,u,l;if(!((u=r[0])<=0))for(a=(o=t[0])<0?(1-u)*o:0,i=e[0],l=0;l<u;l++)i[a]=n(),a+=o}(e,r,t,n)}function p(e,r,t,n,o){var a,i;return(i=e[0]).get&&i.set&&(a=f),a?function(e,r,t,n,o,a){var i,u,l,c,f,_;if(!((f=r[0])<=0))for(l=n[0],u=t[0],c=e[0],i=o[0],_=0;_<f;_++)i(c,l,a()),l+=u}(e,r,t,n,[a=a||c],o):function(e,r,t,n,o){var a,i,u,l,c;if(!((l=r[0])<=0))for(i=n[0],a=t[0],u=e[0],c=0;c<l;c++)u[i]=o(),i+=a}(e,r,t,n,o)}r=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,r,t){var c,f,_,p;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(u.call(e,r)||l.call(e,r)?(c=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),_="get"in t,p="set"in t,f&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(e,r,t.get),p&&i&&i.call(e,r,t.set),e},r(_,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:p});export{_ as default,p as ndarray};
//# sourceMappingURL=mod.js.map
